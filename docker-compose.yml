version: '2.4'
services:

  api:
    build:
      context: ./api
      target: with_entrypoint
    image: ${CI_REGISTRY_IMAGE}/api
    volumes:
      - /usr/src/webroot
    depends_on:
      - db
    environment:
      SERVER_NAME: ${SERVER_NAME}
    command: >
      uwsgi
        --socket 0.0.0.0:8000
        --master
        --processes 1
        --threads 4
        --wsgi-file ./jira/wsgi.py

# Use --socket 0.0.0.0:8000 for working with nginx
# Use --http 0.0.0.0:8000 for working with nginx

  cron:
    build:
      context: ./api
      target: without_entrypoint
    image: ${CI_REGISTRY_IMAGE}/cron
    depends_on:
      - db
    command: >
      cron -f

  db:
    image: postgres:10
    environment:
      POSTGRES_PASSWORD: "password"
    volumes:
      - "db:/var/lib/postgresql/data/"
    # POSTGRES_HOST_AUTH_METHOD=trust

  nginx:
    build: ./nginx
    image: ${CI_REGISTRY_IMAGE}/nginx
    depends_on:
      - api
    volumes_from:
      - api
    volumes:
      #- ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    ports:
      - 80:80
      - 443:443
    restart: always
    environment:
      DOLLAR: "$$"
      SERVER_NAME: ${SERVER_NAME}
      DJANGO_HOST: "api"
      DJANGO_PORT: ${DJANGO_PORT}
    command: >
      /bin/bash -c "
        envsubst < /etc/nginx/conf.d/default.conf.tmpl > /etc/nginx/conf.d/default.conf &&
        exec nginx -g 'daemon off;'
      "
  
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

volumes:
  db:
